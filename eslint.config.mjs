import globals from 'globals';
import pluginJs from '@eslint/js';

export default [
  pluginJs.configs.recommended,
  {
    languageOptions: {
      globals: {
        ...globals.browser
      }
    },
    linterOptions: {
      reportUnusedDisableDirectives: 'warn'
    },
    name: 'alice/default',
    rules: {
      // Possible Errors
      'array-callback-return': 'error',
      'no-await-in-loop': 'warn',
      'no-constant-condition': 'warn',
      'no-constructor-return': 'error',
      'no-debugger': 'warn',
      'no-duplicate-imports': 'error',
      'no-inner-declarations': 'error',
      'no-promise-executor-return': 'error',
      'no-self-compare': 'error',
      'no-template-curly-in-string': 'error',
      'no-unmodified-loop-condition': 'error',
      'no-unreachable': 'warn',
      'no-unreachable-loop': 'warn',
      'no-unused-private-class-members': 'warn',
      'no-unused-vars': 'warn',
      'no-use-before-define': 'error',
      'no-useless-assignment': 'warn',
      'no-useless-backreference': 'warn',
      'require-atomic-updates': 'warn',

      // Suggestions
      'accessor-pairs': 'warn',
      'arrow-body-style': ['error', 'as-needed'],
      'block-scoped-var': 'error',
      'camelcase': 'error',
      'capitalized-comments': 'off',
      'class-methods-use-this': 'error',
      'complexity': 'error',
      'consistent-return': 'error',
      'consistent-this': 'error',
      'curly': ['error', 'multi-line'],
      'default-case': 'error',
      'default-case-last': 'error',
      'default-param-last': 'error',
      'dot-notation': 'error',
      'eqeqeq': 'error',
      'func-name-matching': [
        'error',
        'always',
        { considerPropertyDescriptor: true }
      ],
      'func-names': 'error',
      'func-style': ['error', 'expression'],
      'grouped-accessor-pairs': 'error',
      'guard-for-in': 'error',
      'id-denylist': ['error', 'tmp', 'temp'],
      'id-length': ['error', { exceptions: [], max: 70, min: 2 }],
      'id-match': 'off',
      'init-declarations': 'off',
      'logical-assignment-operators': 'error',
      'max-classes-per-file': ['error', { ignoreExpressions: true, max: 1 }],
      'max-depth': 'error',
      'max-lines': ['warn', { max: 500 }],
      'max-lines-per-function': [
        'warn',
        { max: 100, skipBlankLines: true, skipComments: true }
      ],
      'max-nested-callbacks': 'warn',
      'max-params': 'warn',
      'max-statements': 'off',
      'new-cap': 'error',
      'no-alert': 'warn',
      'no-array-constructor': 'error',
      'no-bitwise': 'error',
      'no-caller': 'error',
      'no-console': 'warn',
      'no-continue': 'off',
      'no-div-regex': 'error',
      'no-else-return': 'error',
      'no-empty-function': 'error',
      'no-eq-null': 'error',
      'no-eval': 'error',
      'no-extend-native': 'error',
      'no-extra-bind': 'error',
      'no-extra-label': 'error',
      'no-implicit-coercion': 'error',
      'no-implicit-globals': 'warn',
      'no-implied-eval': 'error',
      'no-inline-comments': 'off',
      'no-invalid-this': 'error',
      'no-iterator': 'error',
      'no-label-var': 'error',
      'no-labels': 'warn',
      'no-lone-blocks': 'error',
      'no-lonely-if': 'error',
      'no-loop-func': 'error',
      'no-magic-numbers': [
        'warn',
        {
          enforceConst: true,
          ignore: [-1, 0, 1],
          ignoreClassFieldInitialValues: true,
          ignoreDefaultValues: true
        }
      ],
      'no-multi-assign': 'error',
      'no-multi-str': 'error',
      'no-negated-condition': 'error',
      'no-nested-ternary': 'error',
      'no-new': 'error',
      'no-new-func': 'error',
      'no-new-wrappers': 'error',
      'no-object-constructor': 'error',
      'no-octal-escape': 'error',
      'no-param-reassign': 'off',
      'no-plusplus': 'off',
      'no-proto': 'error',
      'no-restricted-exports': 'off',
      'no-restricted-globals': 'off',
      'no-restricted-imports': 'off',
      'no-restricted-properties': 'off',
      'no-restricted-syntax': 'off',
      'no-return-assign': 'error',
      'no-script-url': 'error',
      'no-sequences': ['error', { allowInParentheses: false }],
      'no-shadow': 'error',
      'no-ternary': 'off',
      'no-throw-literal': 'error',
      'no-undef-init': 'error',
      'no-undefined': 'error',
      'no-underscore-dangle': 'error',
      'no-unneeded-ternary': 'error',
      'no-unused-expressions': 'error',
      'no-unused-labels': 'warn',
      'no-useless-call': 'error',
      'no-useless-computed-key': 'error',
      'no-useless-concat': 'error',
      'no-useless-constructor': 'error',
      'no-useless-rename': 'error',
      'no-useless-return': 'error',
      'no-var': 'error',
      'no-void': 'error',
      'no-warning-comments': [
        'error',
        { location: 'start', terms: ['todo', 'fixme', 'xxx', 'broken', '!'] }
      ],
      'object-shorthand': 'error',
      'one-var': ['error', 'never'],
      'operator-assignment': 'error',
      'prefer-arrow-callback': 'error',
      'prefer-const': 'warn',
      'prefer-destructuring': 'off',
      'prefer-exponentiation-operator': 'error',
      'prefer-named-capture-group': 'error',
      'prefer-numeric-literals': 'error',
      'prefer-object-has-own': 'error',
      'prefer-object-spread': 'error',
      'prefer-promise-reject-errors': 'error',
      'prefer-regex-literals': 'error',
      'prefer-rest-params': 'error',
      'prefer-spread': 'error',
      'prefer-template': 'error',
      'radix': 'error',
      'require-await': 'warn',
      'require-unicode-regexp': ['error', { requireFlag: 'v' }],
      'sort-imports': [
        'error',
        {
          allowSeparatedGroups: true,
          ignoreCase: true,
          ignoreDeclarationSort: false,
          ignoreMemberSort: false,
          memberSyntaxSortOrder: ['none', 'all', 'multiple', 'single']
        }
      ],
      'sort-keys': 'off',
      'sort-vars': ['error', { ignoreCase: true }],
      'strict': 'error',
      'symbol-description': 'error',
      'unicode-bom': 'error',
      'vars-on-top': 'off',
      'yoda': ['error', 'never', { onlyEquality: true }]
    }
  }
];
